//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to
// copy, distribute and modify it.
//

'use strict';

var AWS = require('aws-sdk'),
	uuid = require('uuid'),
	documentClient = new AWS.DynamoDB.DocumentClient();

exports.handler = function(event, context, callback) {
	var body = JSON.parse(event.body);

	var params = {
	    TableName : "pointventure-mobilehub-1424110637-individuals",
	    KeyConditionExpression: "#pk = :key",
	    ExpressionAttributeNames:{
	        "#pk": "primaryKey"
	    },
	    ExpressionAttributeValues: {
	        ":key":body.gainUser
	    }
	};

	documentClient.query(params, function(err, data){
		if (err || data.Items.length == 0) {
			var response = {
				statusCode: 206,
				headers: {"Content-Type": "application/json"},
				body: JSON.stringify({"error" : "no such individual"})
			};
			console.log("response: " + JSON.stringify(response))
			callback(err, response)
		} else {
			var paramsTwo = {
			    TableName : "pointventure-mobilehub-1424110637-individuals",
			    KeyConditionExpression: "#pk = :key",
			    ExpressionAttributeNames:{
			        "#pk": "primaryKey"
			    },
			    ExpressionAttributeValues: {
			        ":key":body.loseUser
			    }
			};

			documentClient.query(paramsTwo, function(err, dataTwo){
				if (err || dataTwo.Items.length == 0) {
					var response = {
						statusCode: 206,
						headers: {"Content-Type": "application/json"},
						body: JSON.stringify({"error" : "no such individual"})
					};
					console.log("response: " + JSON.stringify(response))
					callback(err, response)
				} else {
					var updateParams =  {
						TableName:"pointventure-mobilehub-1424110637-individuals",
					    Key:{
					        "primaryKey": body.gainUser,
							"points" : data.Items[0].points
					    },
					    UpdateExpression: "set points = :a",
					    ExpressionAttributeValues:{
					        ":a": data.Items[0].points + body.points
					    },
					    ReturnValues:"UPDATED_NEW"
					}
					documentClient.update(updateParams, function(err, data){
						if (err) {
							var response = {
								statusCode: 500,
								headers: {"Content-Type": "application/json"},
								body: JSON.stringify({"error" : "could not update information"})
							};
							console.log("response: " + JSON.stringify(response))
							callback(err, response)
						} else {
							var updateParamsTwo =  {
								TableName:"pointventure-mobilehub-1424110637-individuals",
							    Key:{
							        "primaryKey": body.loseUser,
									"points" : dataTwo.Items[0].points
							    },
							    UpdateExpression: "set points = :a",
							    ExpressionAttributeValues:{
							        ":a": dataTwo.Items[0].points - body.points
							    },
							    ReturnValues:"UPDATED_NEW"
							}
							documentClient.update(updateParamsTwo, function(err, data){
								if (err) {
									var response = {
										statusCode: 500,
										headers: {"Content-Type": "application/json"},
										body: JSON.stringify({"error" : "could not update information"})
									};
									console.log("response: " + JSON.stringify(response))
									callback(err, response)
								} else {
									var response = {
										statusCode: 200,
										headers: {"Content-Type": "application/json"},
										body: JSON.stringify({"respose" : "success"})
									};
									console.log("response: " + JSON.stringify(response))
									callback(null, response)
								}
							});
						}
					});
				}
			});
		}
	});

};
